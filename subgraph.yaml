specVersion: 0.0.2
description: Bloom is an end-to-end protocol for decentralized identity and credit scoring. The protocol's core functionality is handled with Ethereum smart contracts and uses L2 scaling solutions such as state channels to ensure fast and cheap operations on the blockchain.
repository: https://github.com/PhilippeMts/bloom-subgraph
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: Account
    network: mainnet
    source:
      address: '0xB0f6905fa74aD35C0Dc43FF60A2250488735dfC5'
      abi: AccountRegistryLogic
      startBlock: 6822879
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - Account
      abis:
        - name: AccountRegistryLogic
          file: ./abis/AccountRegistryLogic.json
      eventHandlers:
        - event: AddressLinked(indexed address,indexed address,indexed uint256)
          handler: handleAddressLinked
        - event: AddressUnlinked(indexed address)
          handler: handleAddressUnlinked
      file: ./mappings/accountRegistry.ts
  - kind: ethereum/contract
    name: Attestation
    network: mainnet
    source:
      address: '0xceec7aAA57e3a77c73A9954b9b7D5B32ab688318'
      abi: AttestationLogic
      startBlock: 6822938
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - Attestation
      abis:
        - name: AttestationLogic
          file: ./abis/AttestationLogic.json
      eventHandlers:
        - event: TraitAttested(address,address,address,bytes32)
          handler: handleTraitAttested
      file: ./mappings/attestationLogic.ts
