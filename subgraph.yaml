specVersion: 0.0.2
description: Bloom is an end-to-end protocol for decentralized identity and credit scoring. The protocol's core functionality is handled with Ethereum smart contracts and uses L2 scaling solutions such as state channels to ensure fast and cheap operations on the blockchain.
repository: https://github.com/PhilippeMts/bloom-subgraph
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: Attestation
    network: rinkeby
    source:
      address: '0x313a0DC2A954F8D196CE72FEf175f4403B7121Ca'
      abi: AttestationLogic
      startBlock: 3433077
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - User
        - Attester
        - Attestation
      abis:
        - name: AttestationLogic
          file: ./abis/AttestationLogic.json
      eventHandlers:
        - event: TraitAttested(address,address,address,bytes32)
          handler: handleTraitAttested
      file: ./mappings/attestationLogic.ts
  - kind: ethereum/contract
    name: BloomToken
    network: rinkeby
    source:
      address: '0x7D4A44f0c4Ba0386f7126D53bA8EddA70BE4797b'
      abi: IERC20
      startBlock: 2086275
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - User
      abis:
        - name: IERC20
          file: ./abis/IERC20.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
      file: ./mappings/bloomToken.ts
